"use strict";(self.webpackChunkdocusaurus_app=self.webpackChunkdocusaurus_app||[]).push([[4859],{7116:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"getting-started/variables/variables-overview","title":"Variables","description":"With the release of v1.28.0, we\u2019ve shifted to treating all Request Variables as strings instead of inferring the data type from the value. See the discussion for more information.","source":"@site/docs/getting-started/variables/variables-overview.md","sourceDirName":"getting-started/variables","slug":"/getting-started/variables/variables-overview","permalink":"/docs/getting-started/variables/variables-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started/variables/variables-overview.md","tags":[],"version":"current","frontMatter":{"id":"variables-overview","title":"Variables","sidebar_label":"Overview"},"sidebar":"tutorialSidebar","previous":{"title":"Scripts Translator","permalink":"/docs/getting-started/import-or-export-data/scripts-translator"},"next":{"title":"Global Environment Variables","permalink":"/docs/getting-started/variables/global-variables"}}');var i=n(4848),a=n(8453);const t={id:"variables-overview",title:"Variables",sidebar_label:"Overview"},l=void 0,o={},c=[{value:"Overview",id:"overview",level:2},{value:"Types",id:"types",level:2},{value:"Variable Precedence",id:"variable-precedence",level:2},{value:"Variable Data Type",id:"variable-data-type",level:2},{value:"Scripting API",id:"scripting-api",level:2}];function d(e){const r={a:"a",code:"code",em:"em",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:["With the release of ",(0,i.jsx)(r.strong,{children:"v1.28.0"}),", we\u2019ve shifted to treating all ",(0,i.jsx)(r.strong,{children:"Request Variables"})," as strings instead of inferring the data type from the value. See the ",(0,i.jsx)(r.a,{href:"#",children:"discussion"})," for more information."]}),"\n",(0,i.jsx)(r.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(r.p,{children:["Variables in Bruno allow you to store ",(0,i.jsx)(r.strong,{children:"dynamic values"})," that can be reused across multiple API requests, environments, and workflows."]}),"\n",(0,i.jsx)(r.p,{children:"This feature enhances:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Flexibility"})," \u2013 Use variables for frequently changing values."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Maintainability"})," \u2013 Manage tokens, environment-specific URLs, etc."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Efficiency"})," \u2013 Define values once and reuse them anywhere."]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"types",children:"Types"}),"\n",(0,i.jsxs)(r.p,{children:["There are ",(0,i.jsx)(r.strong,{children:"6 types"})," of variables in Bruno:"]}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.strong,{children:"Global Variables"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.strong,{children:"Environment Variables"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.strong,{children:"Collection Variables"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.strong,{children:"Folder Variables"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.strong,{children:"Request Variables"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.strong,{children:"Runtime Variables"})}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["Additionally, you can define ",(0,i.jsx)(r.strong,{children:"Process Environment Variables"})," using an external environment configuration file:"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.strong,{children:"Process Environment Variables"})}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"variable-precedence",children:"Variable Precedence"}),"\n",(0,i.jsxs)(r.p,{children:["When accessing a variable, ",(0,i.jsx)(r.strong,{children:"precedence"})," determines which value is used:"]}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Runtime Variables"})," (Highest priority)"]}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.strong,{children:"Request Variables"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.strong,{children:"Folder Variables"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.strong,{children:"Environment Variables"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.strong,{children:"Collection Variables"})}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Global Variables"})," (Lowest priority)"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["\ud83d\ude80 ",(0,i.jsx)(r.strong,{children:"Process Environment Variables"})," are accessed using ",(0,i.jsx)(r.code,{children:"{{process.env.VAR_NAME}}"})," and do not compete with the above precedence levels."]}),"\n",(0,i.jsx)(r.h2,{id:"variable-data-type",children:"Variable Data Type"}),"\n",(0,i.jsxs)(r.p,{children:["All variables are ",(0,i.jsx)(r.strong,{children:"stored as strings"}),". Bruno does ",(0,i.jsx)(r.strong,{children:"not"})," infer or change the data type based on the assigned value."]}),"\n",(0,i.jsx)(r.h2,{id:"scripting-api",children:"Scripting API"}),"\n",(0,i.jsxs)(r.p,{children:["See the ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"#",children:"Scripting API"})})," for more information on accessing variables in your scripts."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsxs)(r.em,{children:["Last updated on ",(0,i.jsx)(r.strong,{children:"February 26, 2025"}),"."]})})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>l});var s=n(6540);const i={},a=s.createContext(i);function t(e){const r=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(a.Provider,{value:r},e.children)}}}]);